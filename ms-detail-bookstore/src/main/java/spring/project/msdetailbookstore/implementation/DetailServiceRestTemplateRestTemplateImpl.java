package spring.project.msdetailbookstore.implementation;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpEntity;import org.springframework.http.HttpMethod;import org.springframework.http.ResponseEntity;import org.springframework.stereotype.Service;import org.springframework.web.client.RestTemplate;import spring.project.msdetailbookstore.entity.Book;import spring.project.msdetailbookstore.entity.Detail;import spring.project.msdetailbookstore.service.IDetailService;import java.util.*;@Service("serviceRestTemplate")public class DetailServiceRestTemplateRestTemplateImpl implements IDetailService {    @Autowired    private RestTemplate restTemplate;    @Override    public List<Detail> select() {        List<Book> books = Arrays.asList(restTemplate                .getForObject("http://localhost:8001/select", Book[].class));        List<Detail> details = new ArrayList<>();        for (Book book : books) {            Detail detail = new Detail(book);            details.add(detail);        }        return details;    }    @Override    public Detail get(Long id) {        Map<String, Object> value = new HashMap<>();        value.put("id", id);        Book book = restTemplate.                getForObject("http://localhost:8001/get/{id}", Book.class, value);        return new Detail(book);    }    @Override    public Book insert(Book book) {        HttpEntity<Book> httpEntity = new HttpEntity<>(book);        ResponseEntity<Book> responseEntity = restTemplate                .exchange("http://localhost:8001/insert"                        , HttpMethod.POST, httpEntity, Book.class);        return responseEntity.getBody();    }    @Override    public Book update(Book book, Long id) {        Map<String, Object> value = new HashMap<>();        value.put("id", id);        HttpEntity<Book> httpEntity = new HttpEntity<>(book);        ResponseEntity<Book> responseEntity = restTemplate                .exchange("http://localhost:8001/update/{id}"                        , HttpMethod.PUT, httpEntity, Book.class, value);        return responseEntity.getBody();    }    @Override    public void delete(Long id) {        Map<String, Object> value = new HashMap<>();        value.put("id", id);        restTemplate.delete("http://localhost:8001/delete/{id}", value);    }}