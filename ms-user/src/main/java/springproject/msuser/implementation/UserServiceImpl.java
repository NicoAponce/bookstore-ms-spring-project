package springproject.msuser.implementation;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;import org.springframework.stereotype.Service;import springproject.msuser.entity.User;import springproject.msuser.repository.IUserRepository;import springproject.msuser.service.IUserService;import java.util.List;@Servicepublic class UserServiceImpl implements IUserService {    @Autowired    private IUserRepository userRepository;    @Autowired    private BCryptPasswordEncoder passwordEncoder;    @Override    public List<User> select(Boolean enabled) {        return userRepository.findByEnabled(enabled);    }    @Override    public User get(Long id) {        return userRepository.findById(id).orElse(null);    }    @Override    public User insert(User user) {        user.setPassword(passwordEncoder.encode(user.getPassword()));        user.setEnabled(true);        return userRepository.save(user);    }    @Override    public User update(User user, Long id) {        User dbUser = userRepository.findById(id).orElse(null);        dbUser.setUsername(user.getUsername());        dbUser.setPassword(user.getPassword());        dbUser.setName(user.getName());        dbUser.setEmail(user.getEmail());        dbUser.setRoles(user.getRoles());        return userRepository.save(dbUser);    }    @Override    public User delete(Long id) {        User user = userRepository.findById(id).orElse(null);        user.setEnabled(false);        return userRepository.save(user);    }    @Override    public User find(String username) {        return userRepository.findByUsername(username);    }}